<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/blog/feed/by_tag/personal.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/blog/" rel="alternate" type="text/html" /><updated>2023-07-13T12:09:58-04:00</updated><id>http://localhost:4000/blog/feed/by_tag/personal.xml</id><title type="html">Jacob’s Blog</title><subtitle>Feel to reach out to me at jacoblevgw at gmail</subtitle><entry><title type="html">Why it’s necessary to shoot yourself in the foot</title><link href="http://localhost:4000/blog/observation/2023/07/08/shoot-yourself-in-the-foot.html" rel="alternate" type="text/html" title="Why it’s necessary to shoot yourself in the foot" /><published>2023-07-08T17:47:21-04:00</published><updated>2023-07-08T17:47:21-04:00</updated><id>http://localhost:4000/blog/observation/2023/07/08/shoot-yourself-in-the-foot</id><content type="html" xml:base="http://localhost:4000/blog/observation/2023/07/08/shoot-yourself-in-the-foot.html">&lt;p&gt;Without shooting yourself in the foot, learning lacks motivation. Complexity without reason is really confusing.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;At the Recurse Center Feb 2020: I watch a talk during presentations about someone optimizing a database engine. It was really complicated, and I remeber nothing about the talk itself. What I do remember is thinking to myself “this seems really complicated for no good reason.” Keep in mind, I had never made a web application at that time and when I needed to store data, I just used a csv file or a python pickle file on the disk. I thought that a filesystem was sufficient for storing data.&lt;/p&gt;

&lt;p&gt;Fast forward a few months and I’m building my first web application. I don’t remember what it was for, but I remember using a csv file as the database. I had to load the file into memory every time I wanted to look something up and it was just a big pain. I now understood why using a database is (sometimes) a good idea.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Learning Rust, July 2020: I start learning about the borrow checker. It prevents you from keeping a pointer to an item of a vector (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;vec[i]&lt;/code&gt;) if you pass the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vec&amp;lt;T&amp;gt;&lt;/code&gt; as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;mut&lt;/code&gt;. I don’t really get why this is necessary. I have never done low-level programming before, never used pointers, and now I am being told that following the borrow checker is ‘safe’. It is still very confusing to me.&lt;/p&gt;

&lt;p&gt;Fast forward to when I am writing Zig code. I take &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;amp;array_list.items[i]&lt;/code&gt;, append to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;array_list&lt;/code&gt; and then try to write to the stored pointer. I get a segfault. Ahh, now I get the problem Rust solves.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Learning Vue, July 2020: Why are there all of these complicated ways to represent state? Shouldn’t developing a web app be simpler than this?&lt;/p&gt;

&lt;p&gt;After writing a bunch of vanilla JS, I can see why these frameworks could be useful. I have never made a very big web app, but I could see that keeping track of state and what is or isn’t rendered is hard and gets much harder with a bigger web app.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;To fully understand a “best practice” or why something is necessary, it’s important to experience how things go wrong without it. When teaching programming, we should let people make these mistakes, and &lt;em&gt;then&lt;/em&gt; show them the tools to correct them. Just giving someone a complicated tool without a salient reason to explain its complexity will just make them really confused.&lt;/p&gt;

&lt;p&gt;Some opinions:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;You should store stuff in csv files before using a database&lt;/li&gt;
  &lt;li&gt;You should learn Zig (or C) before you learn Rust&lt;/li&gt;
  &lt;li&gt;You should write a web app in vanilla JS before you learn a framework&lt;/li&gt;
  &lt;li&gt;You should write a game from scratch before using Unity&lt;/li&gt;
  &lt;li&gt;You should use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;javac&lt;/code&gt; from the command line before using an IDE&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Have you had an experience like this?
Email me at jacoblevgw at gmail and I’ll put it below.&lt;/p&gt;

&lt;p&gt;Examples from readers:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Arian Araf: You should learn Assembly before you learn optimization&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Almoctar Hassoumi: Use HTML before using a CMS like WordPress&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;See more on &lt;a href=&quot;https://news.ycombinator.com/item?id=36688738&quot;&gt;HN&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="observation" /><category term="observation" /><category term="personal" /><summary type="html">Without shooting yourself in the foot, learning lacks motivation. Complexity without reason is really confusing.</summary></entry><entry><title type="html">What I Think About When I Think About History</title><link href="http://localhost:4000/blog/observation/2023/06/03/whatithinkaboutwhenithinkabouthistory.html" rel="alternate" type="text/html" title="What I Think About When I Think About History" /><published>2023-06-03T17:47:21-04:00</published><updated>2023-06-03T17:47:21-04:00</updated><id>http://localhost:4000/blog/observation/2023/06/03/whatithinkaboutwhenithinkabouthistory</id><content type="html" xml:base="http://localhost:4000/blog/observation/2023/06/03/whatithinkaboutwhenithinkabouthistory.html">&lt;p&gt;&lt;em&gt;[Epistemic status: I’m sure that this happens in me. Not so sure why; take all my speculations and extrapolations (to AI especially) with a grain of salt.]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ever since learning more about history in the past year or two, I’ve started having a really weird sensory experience. I can see history. What I mean by this is that when I hear a date when something happened, I can place it in my field of view. The timeline also has different levels of zoom on a sort of logarithmic scale.&lt;/p&gt;

&lt;p&gt;I think this experience/model all started when I learned the US Presidents using Anki. For every president, I learned the years they served, their picture (picture → name), and the party they belonged to. I did this not because I’m some crazy history buff, but just because I wanted to test how well Anki works. I found that Anki works remarkably well. I was able to memorize all the presidents and becuase of the nature of the spaced-repititon algorithm, still remember most (&amp;gt;95%) today.&lt;/p&gt;

&lt;p&gt;As a side effect of memorizing all the presidents, I developed this weird timeline sense. I (semi-)concously tried to place the presidents in the timeline when remembering them. I think that visualizing this timeline in my head every day cemented it. I started to place other dates and historical facts that I learned on the same timeline. It became a self-organizing way to dump all my historical knowlege.&lt;/p&gt;

&lt;p&gt;Here’s how it works for me: When thinking in the context of the 20th and 21st centuries, which are the 2 most common centuries for me to think about, the 20th century starts at the left of my field of view. Maybe at 70° W (if N is straight ahead). The turn of the 21st century is at around 20° E. But I can also zoom in or out. For example, when I zoom in on my timeline to just the 21st century, I see the year 2000 at the left of my field of vision and 2023 at the far right. I can also zoom out from 0 AD to today, with similar locations. What I can’t do, and I find this pretty interesting, is zoom in on the 5th century. Like sure, I can just pretend to visualize a timline of it in my head, but it does not feel the same as visualizing latter centuries. I think the reason for this is because I don’t know many events that can ground the timeline in the 5th century. I know many more events that are in the latter centuries, so that could be a possible reason why I can visualize their timeline in more detail.&lt;/p&gt;

&lt;p&gt;I wonder how much of this sense I should attribute to Anki. Anki has clearly both provided facts to populate the timeline and also a motivation for my brain to form this timeline. In fact, I’ve been thinking about the idea that intelligence is just knowlege compression. I’m pretty sure that one of the reasons that my brain created the timeline was to make it easier to memorize the dates that I was learning. Learning the presidents in order is actually the perfect application of a timeline. Every point on the timeline is filled in, for the most part, the years of service follow a simple pattern (4 or 8 years), and I linearly added to the end of the timeline starting from 1789. This year in school I took AP US History, where I learned a LOT more dates with Anki (I made at least one flashcard for everything my teacher said (I have 1586 cards tagged &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apush&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;history&lt;/code&gt;)). And sure enough, I placed these on the timeline as well. My brain found a really good way to compress temporal, factual, knowlege (which humans aren’t that good at remembering), with visual knowlege (which humans are really good at dealing with).&lt;/p&gt;

&lt;h2 id=&quot;how-this-relates-to-ai&quot;&gt;How this relates to AI&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;[This is where the epistemic status applies the most, I don’t know if anything I’m saying here is true.]&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;AI is not just metaphorically trying to compress knowlege; LLMs are literally trained to compress the entire internet into their weights. Given that Gradient Descent is probably better than the process my brain used to make my timeline, I suspect that in a multimodal model, if any mode is slightly more effective at storing knowlege than other modes (like vision is for humans) a lot of knowlege that is not even in that format will be stored and accessed in that format because it is more efficient for the model to learn it in that format. Furthermore, we could validate this by doing mechanistic interpritability reserach. If see that a model is using the same algorithms to access two totally different formats of data, it would be evidence for this hypothesis. I don’t really know much about multi-modal models or how they work, but I’m assuming that they are the next logical step from LLMs, so this hypothesis could be testable soon.&lt;/p&gt;

&lt;h2 id=&quot;contact-me&quot;&gt;Contact me&lt;/h2&gt;

&lt;p&gt;If you have this same sense or something similar to it, please email me (jacoblevgw at gmail). I’m really curious how this manifests in others. Humans have really &lt;a href=&quot;https://en.wikipedia.org/wiki/Synesthesia&quot;&gt;diverse&lt;/a&gt; &lt;a href=&quot;https://en.wikipedia.org/wiki/Aphantasia&quot;&gt;patterns&lt;/a&gt; &lt;a href=&quot;https://www.csun.io/2022/03/03/how-i-see-numbers.html&quot;&gt;of thought&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><category term="observation" /><category term="observation" /><category term="personal" /><category term="ai" /><summary type="html">[Epistemic status: I’m sure that this happens in me. Not so sure why; take all my speculations and extrapolations (to AI especially) with a grain of salt.]</summary></entry></feed>